{"is_source_file": true, "format": "TypeScript", "description": "This file contains core logic functions for a Tic Tac Toe game, including board creation, move validation, winner calculation, draw detection, and player turn management. It defines types for the game state and board, and provides utility functions for game operations, designed for a frontend implementation.", "external_files": ["../utils/validators", "../components/Square"], "external_methods": ["assertCellEmpty", "assertValidIndex", "assertValidPlayer", "Player"], "published": ["createEmptyBoard", "calculateWinner", "getWinningLine", "isDraw", "makeMove", "getNextPlayer", "GameState"], "classes": [], "methods": [{"name": "export function createEmptyBoard(): Board { createEmptyBoard", "description": "Creates and returns a new 3x3 game board initialized with empty strings.", "scope": "", "scopeKind": ""}, {"name": "export function calculateWinner(board: Board): Player | null { calculateWinner", "description": "Determines and returns the winner ('X' or 'O') if present, otherwise null.", "scope": "", "scopeKind": ""}, {"name": "export function getWinningLine(board: Board): number[] | null { getWinningLine", "description": "Returns the indices of the cells forming the winning line, or null if there's no winner.", "scope": "", "scopeKind": ""}, {"name": "export function isDraw(board: Board): boolean { isDraw", "description": "Checks if the game has resulted in a draw, i.e., all cells filled with no winner.", "scope": "", "scopeKind": ""}, {"name": "export function makeMove(board: Board, index: number, player: Player): Board { makeMove", "description": "Returns a new game board with the player's move applied at the specified index after validation.", "scope": "", "scopeKind": ""}, {"name": "export function getNextPlayer(history: number[]): Player { getNextPlayer", "description": "Determines the next player based on move history length; 'X' goes first.", "scope": "", "scopeKind": ""}], "calls": ["assertValidIndex", "assertValidPlayer", "assertCellEmpty", "calculateWinner"], "search-terms": ["calculateWinner", "getWinningLine", "isDraw", "makeMove", "frontend-only game logic", "tic tac toe game states", "board validation"], "state": 2, "file_id": 16, "knowledge_revision": 122, "git_revision": "17787342719a3a06c27939f21a5d9e9c545c3c72", "revision_history": [{"33": ""}, {"50": "64db919875c6bc0714f2a9e49e8a9fb59881faa3"}, {"122": "17787342719a3a06c27939f21a5d9e9c545c3c72"}], "ctags": [{"_type": "tag", "name": "Board", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export type Board = SquareValue[]; \\/\\/ 9 cells, \"\" | \"X\" | \"O\"$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "GameState", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export type GameState = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^    const va = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "calculateWinner", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function calculateWinner(board: Board): Player | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createEmptyBoard", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function createEmptyBoard(): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "current", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const current = board[index];$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}, {"_type": "tag", "name": "getNextPlayer", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function getNextPlayer(history: number[]): Player {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getWinningLine", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function getWinningLine(board: Board): number[] | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "index", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const current = board[index];$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}, {"_type": "tag", "name": "isDraw", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function isDraw(board: Board): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "lines", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const lines = [$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "lines", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const lines: number[][] = [$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "makeMove", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function makeMove(board: Board, index: number, player: Player): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "newBoard", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const newBoard = board.slice();$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}, {"_type": "tag", "name": "va", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^    const va = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}], "hash": "be816fe361cd0cef73de9f3c193a95ea", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/game/logic.ts"}