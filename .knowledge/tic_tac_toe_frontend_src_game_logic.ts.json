{"is_source_file": true, "format": "TypeScript", "description": "This file contains core game logic for a Tic Tac Toe frontend application, including functions to create an empty board, calculate the winner, check for a draw, make moves, and determine the next player. It also defines the GameState type and imports validation functions.", "external_files": ["../utils/validators"], "external_methods": ["assertCellEmpty", "assertValidIndex", "assertValidPlayer"], "published": ["createEmptyBoard", "calculateWinner", "isDraw", "makeMove", "getNextPlayer", "GameState"], "classes": [], "methods": [{"name": "export function createEmptyBoard(): Board { createEmptyBoard", "description": "Returns a new empty Tic Tac Toe board represented as an array of 9 empty strings.", "scope": "", "scopeKind": ""}, {"name": "export function calculateWinner(board: Board): Player | null { calculateWinner", "description": "Determines if there is a winner given the current board; returns 'X' or 'O' if found, otherwise null.", "scope": "", "scopeKind": ""}, {"name": "export function isDraw(board: Board): boolean { isDraw", "description": "Checks if the board is in a draw state (full with no winner).", "scope": "", "scopeKind": ""}, {"name": "export function makeMove(board: Board, index: number, player: Player): Board { makeMove", "description": "Places a player's mark at a specified index on the board, returning a new immutable board after validation.", "scope": "", "scopeKind": ""}, {"name": "export function getNextPlayer(history: number[]): Player { getNextPlayer", "description": "Determines the next player ('X' or 'O') based on the move history length.", "scope": "", "scopeKind": ""}], "calls": ["assertValidIndex", "assertValidPlayer", "assertCellEmpty", "calculateWinner"], "search-terms": ["createEmptyBoard", "calculateWinner", "isDraw", "makeMove", "getNextPlayer", "Tic Tac Toe", "game logic", "frontend-only"], "state": 2, "file_id": 16, "knowledge_revision": 33, "git_revision": "", "ctags": [{"_type": "tag", "name": "Board", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export type Board = string[]; \\/\\/ 9 cells, \"\" | \"X\" | \"O\"$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "GameState", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export type GameState = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "calculateWinner", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function calculateWinner(board: Board): Player | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createEmptyBoard", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function createEmptyBoard(): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "current", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const current = board[index];$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}, {"_type": "tag", "name": "getNextPlayer", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function getNextPlayer(history: number[]): Player {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "index", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const current = board[index];$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}, {"_type": "tag", "name": "isDraw", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function isDraw(board: Board): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "lines", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const lines = [$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "makeMove", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function makeMove(board: Board, index: number, player: Player): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "newBoard", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const newBoard = board.slice();$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}], "hash": "bb2554f5854532c899fd0faad3d647d8", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/game/logic.ts", "revision_history": [{"33": ""}]}