{"is_source_file": true, "format": "TypeScript", "description": "This source file contains the core game logic for a Tic Tac Toe game, including functions to create a new board, determine the winner, check for a draw, make moves, and get the next player. It also defines types for the game state and the board structure.", "external_files": ["../utils/validators"], "external_methods": ["assertCellEmpty", "assertValidIndex", "assertValidPlayer"], "published": ["createEmptyBoard", "calculateWinner", "getWinningLine", "isDraw", "makeMove", "getNextPlayer", "GameState", "Board"], "classes": [], "methods": [{"name": "export function createEmptyBoard(): Board { createEmptyBoard", "description": "Creates and returns an empty Tic Tac Toe board represented as a string array of length 9 with all cells initialized to empty strings.", "scope": "", "scopeKind": ""}, {"name": "export function calculateWinner(board: Board): Player | null { calculateWinner", "description": "Determines the winner ('X' or 'O') of the current board if any, or null if there is no winner.", "scope": "", "scopeKind": ""}, {"name": "export function getWinningLine(board: Board): number[] | null { getWinningLine", "description": "Returns the indices of the winning line (three in a row) if present, or null otherwise. Useful for visual highlighting.", "scope": "", "scopeKind": ""}, {"name": "export function isDraw(board: Board): boolean { isDraw", "description": "Returns true if the board is a draw, i.e., all cells filled and no winner.", "scope": "", "scopeKind": ""}, {"name": "export function makeMove(board: Board, index: number, player: Player): Board { makeMove", "description": "Returns a new board with the player's move applied at the specified index after validating the move. does not mutate the input board.", "scope": "", "scopeKind": ""}, {"name": "export function getNextPlayer(history: number[]): Player { getNextPlayer", "description": "Determines the next player ('X' or 'O') based on move history length. Even number of moves indicates 'X' turn, odd indicates 'O'.", "scope": "", "scopeKind": ""}], "calls": ["assertValidIndex", "assertValidPlayer", "assertCellEmpty", "Array.from", "board.slice", "calculateWinner"], "search-terms": ["Tic Tac Toe", "game logic", "calculateWinner", "immutability", "getNextPlayer", "createEmptyBoard"], "state": 2, "file_id": 16, "knowledge_revision": 50, "git_revision": "64db919875c6bc0714f2a9e49e8a9fb59881faa3", "revision_history": [{"33": ""}, {"50": "64db919875c6bc0714f2a9e49e8a9fb59881faa3"}], "ctags": [{"_type": "tag", "name": "Board", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export type Board = string[]; \\/\\/ 9 cells, \"\" | \"X\" | \"O\"$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "GameState", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export type GameState = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^    const va = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "calculateWinner", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function calculateWinner(board: Board): Player | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createEmptyBoard", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function createEmptyBoard(): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "current", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const current = board[index];$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}, {"_type": "tag", "name": "getNextPlayer", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function getNextPlayer(history: number[]): Player {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getWinningLine", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function getWinningLine(board: Board): number[] | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "index", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const current = board[index];$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}, {"_type": "tag", "name": "isDraw", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function isDraw(board: Board): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "lines", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const lines = [$/", "language": "TypeScript", "kind": "constant", "scope": "calculateWinner", "scopeKind": "function"}, {"_type": "tag", "name": "lines", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const lines: number[][] = [$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}, {"_type": "tag", "name": "makeMove", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^export function makeMove(board: Board, index: number, player: Player): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "newBoard", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^  const newBoard = board.slice();$/", "language": "TypeScript", "kind": "constant", "scope": "makeMove", "scopeKind": "function"}, {"_type": "tag", "name": "va", "path": "/home/kavia/workspace/code-generation/react-tic-tac-toe-210034-210043/tic_tac_toe_frontend/src/game/logic.ts", "pattern": "/^    const va = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "getWinningLine", "scopeKind": "function"}], "hash": "32585bc5a875fe21b7098b904a5f3d25", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/game/logic.ts"}